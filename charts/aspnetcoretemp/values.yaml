## @param replicaCount Number of ASP.NET Core replicas to deploy
##
replicaCount: 1

## @param environment The ASP.NET Core environment name (DOTNET_ENVIRONMENT)
##
environment: Development

## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}

## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}

## ASP.NET Core image
## @param image.registry ASP.NET Core image registry
## @param image.repository ASP.NET Core image repository
## @param image.tag ASP.NET Core image tag (immutable tags are recommended)
## @param image.pullPolicy ASP.NET Core image pull policy
##
image:
  registry: mcr.microsoft.com
  repository: dotnet/samples
  tag: aspnetapp
  pullPolicy: IfNotPresent

## ASP.NET Core Service parameters.
## @param service.name Name of the service, automatically generated from the release name if not specified
## @param service.port ASP.NET Core service HTTP port
## @param service.annotations Additional custom annotations for ASP.NET Core service
##
service:
  name: ""
  port: 80
  annotations: {}

## Configure the ingress resource that allows you to access the ASP.NET Core app (https://kubernetes.io/docs/user-guide/ingress/)
## @param ingress.create Specifies whether an Ingress resource should be created
## @param ingress.name Name of the service, automatically generated from the release name if not specified
## @param ingress.className IngressClass that will be be used to implement the Ingress
## @param ingress.hostname Default host for the ingress resource, a host pointing to this will be created
## @param ingress.path Default path for the ingress record
## @param ingress.pathType Ingress path type
## @param ingress.annotations Additional annotations for the Ingress resource, for example nginx ingress annotations
## @param ingress.tls.enabled Enable TLS configuration for the host defined at `ingress.hostname` parameter
## @param ingress.tls.secretName The TLS secret name containing the TLS certificate for the `ingress.hostname` host
##
ingress:
  create: true
  name: ""
  className: nginx
  hostname: aspnetcore.example.local
  path: /
  pathType: Prefix
  annotations: {}
  tls:
    enabled: false
    secretName: ""

## ASP.NET Core deployment parameters
## @param deployment.name Name of the deployment, automatically generated from the release name if not specified
##
deployment:
  name: ""

## ASP.NET Core containers' resource requests and limits defined in YAML
## ref: https://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  limits:
    memory: "128Mi"
  requests:
    cpu: "50m"
    memory: "128Mi"

## @param readinessProbe Optional YAML definition of the readinessProbe, e.g:
# readinessProbe:
#   httpGet:
#     path: "/health"
#     port: http
#   initialDelaySeconds: 30
#   periodSeconds: 5
#   failureThreshold: 6
##
readinessProbe: {}

## @param livenessProbe Optional YAML definition of the livenessProbe, e.g:
# livenessProbe:
#   httpGet:
#     path: "/health"
#     port: http
#   initialDelaySeconds: 30
#   periodSeconds: 5
#   timeoutSeconds: 10
#   failureThreshold: 3
##
livenessProbe: {}

## @param startupProbe Optional YAML definition of the startupProbe
##
startupProbe: {}

## @param extraEnvVars Extra environment variables to be set on ASP.NET Core container, e.g:
## extraEnvVars:
##   - name: FOO
##     value: BAR
##
extraEnvVars: []

## @param podAnnotations Annotations for ASP.NET Core pods
##
podAnnotations: {}

## @param podLabels Extra labels for ASP.NET Core pods
##
podLabels: {}

## @param affinity Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## @param nodeSelector Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## @param tolerations Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## Kubernetes service account
## @param serviceAccount.create Specifies whether a ServiceAccount should be created
## @param serviceAccount.name The name of the ServiceAccount to use, even if "create" is false
## @param serviceAccount.annotations Additional custom annotations for the ServiceAccount
##
serviceAccount:
  create: false
  name: ""
  annotations: {}

## Azure AD Pod Identity binding (https://github.com/Azure/aad-pod-identity)
## @param aadPodIdentityBinding.create Whether or not to create an AAD pod identity binding associated to the deployment
## @param aadPodIdentityBinding.name Name of the AAD pod identity binding, automatically generated from the release name if not specified
## @param aadPodIdentityBinding.identityName Name of the AAD identity
##
aadPodIdentityBinding:
  create: false
  name: ""
  identityName: ""

## Azure Workload Identity (https://learn.microsoft.com/en-us/azure/aks/workload-identity-overview#service-account-annotations)
## @param azureWorkloadIdentity.enabled Whether or not to add Azure Workload Identity labels
## @param azureWorkloadIdentity.clientId The Azure AD application client ID to be used with the pod (you must also set serviceAccount.create to true)
##
azureWorkloadIdentity:
  enabled: false
  clientId: ""
