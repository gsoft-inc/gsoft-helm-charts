apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ default (printf "%s-deployment" .Release.Name) .Values.deployment.name }}
  labels:
    {{- include "aspnetcore.standardLabels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
      {{- toYaml .Values.commonLabels | nindent 4 }}
    {{- end }}
  annotations:
    {{- with .Values.commonAnnotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "aspnetcore.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "aspnetcore.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels }}
          {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
        {{- if .Values.aadPodIdentityBinding.create }}
        aadpodidbinding: {{ .Values.aadPodIdentityBinding.identityName }}
        {{- end }}
        {{- if .Values.azureWorkloadIdentity.enabled }}
        azure.workload.identity/use: "true"
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "aspnetcore.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}-container
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: DOTNET_ENVIRONMENT
              value: {{ .Values.environment | quote }}
            - name: ASPNETCORE_URLS
              value: "http://+:8080"
          {{- range .Values.extraEnvVars }}
            - name: {{ .name }}
              value: {{ .value | quote }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- if .Values.certificateStore.enabled }}
          - name: certificate-store
            mountPath: "/etc/ssl/certs/ca-certificates.crt"
            subPath: {{ quote .Values.certificateStore.fileName }}
            readOnly: true
          {{- end }}
          {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.certificateStore.enabled }}
      - name: certificate-store
        csi:
          driver: file.csi.azure.com
          volumeAttributes:
            subscriptionID: {{ quote .Values.certificateStore.subscriptionId }}
            resourceGroup: {{ quote .Values.certificateStore.resourceGroup }}
            storageAccount: {{ quote .Values.certificateStore.storageAccount }}
            shareName: {{ quote .Values.certificateStore.shareName }}
            clientID: {{ quote .Values.azureWorkloadIdentity.clientId }}
            mountOptions: "dir_mode=0777,file_mode=0777,cache=strict,actimeo=30,nosharesock"
      {{- end }}
      {{- if .Values.extraVolumes}}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
      {{- end }}
